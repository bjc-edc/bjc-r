<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="for %&apos;i&apos; = %&apos;start&apos; to %&apos;end&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%upvar"></input><input type="%n">1</input><input type="%n">10</input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>step</l><l>tester</l></list></block><block s="doIfElse"><block s="reportGreaterThan"><block var="start"/><block var="end"/></block><script><block s="doSetVar"><l>step</l><l>-1</l></block><block s="doSetVar"><l>tester</l><block s="reifyReporter"><autolambda><block s="reportLessThan"><block var="i"/><block var="end"/></block></autolambda><list></list></block></block></script><script><block s="doSetVar"><l>step</l><l>1</l></block><block s="doSetVar"><l>tester</l><block s="reifyReporter"><autolambda><block s="reportGreaterThan"><block var="i"/><block var="end"/></block></autolambda><list></list></block></block></script></block><block s="doSetVar"><l>i</l><block var="start"/></block><block s="doUntil"><block s="evaluate"><block var="tester"/><list></list></block><script><block s="doRun"><block var="action"/><list></list></block><block s="doChangeVar"><l>i</l><block var="step"/></block></script></block></script></block-definition><block-definition s="is %&apos;number&apos; integer?" type="predicate" category="operators"><header></header><code></code><inputs><input type="%n"></input></inputs><script><block s="doIf"><block s="reportEquals"><block s="reportMonadic"><l><option>floor</option></l><block var="number"/></block><block var="number"/></block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block-definition><block-definition s="%&apos;input1&apos; ≥ %&apos;input2&apos;" type="predicate" category="operators"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="reportOr"><block s="reportGreaterThan"><block var="input1"/><block var="input2"/></block><block s="reportEquals"><block var="input1"/><block var="input2"/></block></block></block></script></block-definition><block-definition s="%&apos;input1&apos; ≤ %&apos;input2&apos;" type="predicate" category="operators"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="reportOr"><block s="reportLessThan"><block var="input1"/><block var="input2"/></block><block s="reportEquals"><block var="input1"/><block var="input2"/></block></block></block></script></block-definition><block-definition s="%&apos;base&apos; ^ %&apos;exponent&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doIf"><block s="reportOr"><block s="reportNot"><custom-block s="is %n integer?"><block var="exponent"/></custom-block></block><block s="reportLessThan"><block var="exponent"/><l>0</l></block></block><script><block s="doReport"><l>error: block only works with positive integer exponents</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="exponent"/><l>0</l></block><script><block s="doReport"><l>1</l></block></script></block><block s="doDeclareVariables"><list><l>product</l></list></block><block s="doSetVar"><l>product</l><l>1</l></block><custom-block s="for %upvar = %n to %n %cs"><l>i</l><l>1</l><block var="exponent"/><script><block s="doSetVar"><l>product</l><block s="reportProduct"><block var="product"/><block var="base"/></block></block></script></custom-block><block s="doReport"><block var="product"/></block></script></block-definition></blocks>