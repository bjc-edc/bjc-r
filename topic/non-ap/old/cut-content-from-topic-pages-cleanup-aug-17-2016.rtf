{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww32960\viewh19100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 U1\
\
	//raw-html: <img src="/bjc-r/img/drawing/flower-with-6-square-petals.png" class="imageRight" alt="Drawing Flowers" />\
	//raw-html: <img src="/bjc-r/img/drawing/draw-star-picture.png" class="imageRight" alt="Drawning a Star"><img src="/bjc-r/img/drawing/draw-star-code-with-blanks.png" class="imageRight" alt="Drawing a Star" />\
\
U2\
		//h1: Formerly Topic 3: Conditionals and Variables\
       \
	raw-html: <div class="todo"><ul><li>PG: I've moved to the bitter end everything that had been commented out so that I could read this thing.</li><li>Add multiple sprites and multiple costumes to this unit.</li><ul></div>\
	    //remove/replace some quiz questions\
	//resource: Building a Useful Collection of Predicates [/bjc-r/cur/programming/2-conditionals-abstraction-testing/temp-hodgepodge/2-script-variables/3-predicates.html] // chop out relevant pieces\
	//resource: Analyzing, Debugging, and Simplifying Code [/bjc-r/cur/programming/2-conditionals-abstraction-testing/temp-hodgepodge/2-script-variables/4-analyzing-debugging-simplifying.html]\
	//heading: Social Implications Lab 5: Bits and Information\
	//resource: Big Questions [/bjc-r/cur/programming/2-conditionals-abstraction-testing/5-bits-information/big-questions.html]\
	//(<em>Blown to Bits</em> Chapter 2)\
\
U3\
\
// h1: Formerly Topic 5: Collecting Data into Lists\
\
// h2: Big Ideas\
// big-idea: Understand the meaning of Turing Completeness.\
// big-idea: Understand the concept of recursion.\
// big-idea: Explore privacy issues related to the widespread unchecked dissemination of digital information.\
\
//	video: Programming Paradigms (Dan Garcia) [https://coursesharing.org/courses/6/lectures/13]\
//	video: Recursion 1 [https://coursesharing.org/courses/6/lectures/17]\
//	video: Social Implications 1 [http://youtu.be/v_tOSw-vhug]\
//	reading: Blown to Bits, Chapter 3 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter3.pdf]\
\
// h2: Activities\
// learning-goal: Practice writing and reading functions with different input types.\
// learning-goal: Determine how to break problems down into individual functions.\
// learning-goal: Gain experience working with a new data structure and the large repository of blocks that work on this data structure.\
// learning-goal: Develop the techniques and functions to draw a game board.\
		//resource: Processing List Data [/bjc-r/cur/programming/3-lists/4-combining-list-ops/0-processing-data-lists.html]\
		//resource: When You Really Need to Loop [/bjc-r/cur/programming/3-lists/4-combining-list-ops/2-when-you-really-need-to-loop.html]\
		//resource: Magic Squares [/bjc-r/cur/programming/3-lists/4-combining-list-ops/3-magic-squares.html]\
		//resource: Contact List App: Name Order [/bjc-r/cur/programming/3-lists/4-combining-list-ops/3-contact-list-app-3.html]\
 	//raw-html: <hr />\
\
//heading: Investigations\
	//raw-html: <div class="todo">We agreed to remove these from the units. So, where will these go? Perhaps we can tuck them into the Labs to make things more interesting. --MF</div>\
	//resource: Building Musical Chords (Claimed for L3 --MF) [/bjc-r/cur/programming/3-lists/investigations/chords.html]\
	//resource: Processing a Sentence [/bjc-r/cur/programming/3-lists/investigations/processing-a-sentence.html]\
	//resource: Longest Word [/bjc-r/cur/programming/3-lists/investigations/longest-word.html]\
	//resource: Display Word [/bjc-r/cur/programming/3-lists/investigations/display-word.html]\
	//resource: Exaggerate [/bjc-r/cur/programming/3-lists/investigations/exaggerate.html]\
\
// heading: List Mutation  // this has moved to Chapter 4\
//	resource: Swap Two List Values [/bjc-r/cur/programming/lists/intro/swap-two-list-values.html]\
//	resource: Mutation of Variables [/bjc-r/cur/programming/lists/mutation/mutate-vars.html]\
\
\
//assignment: (Due Later) Hangman Classic [/bjc-r/cur/programming/projects/hangman/hangman-classic.html]\
\
// h1: Formerly Topic 13: Practicing with Lists: Tic-Tac-Toe\
// h2: Big Ideas\
\
\
// 	video: Recursion 2 [https://coursesharing.org/courses/6/lectures/19]\
// 	video: Social Implications 2 [https://coursesharing.org/courses/6/lectures/20]\
// 	reading: Blown to Bits, Chapter 4 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter4.pdf]\
\
// h2: Activities\
// learning-goal: Get more practice with lists and higher order functions used in combination.\
// learning-goal: Develop a significant-sized project.\
\
// heading: Tic-Tac-Toe strategy // this has moved to Chapter 4\
//	 resource: Tic-Tac-Toe: Introduction [/bjc-r/cur/programming/lists/hof/ttt/01-intro.html]\
//	 resource: Program Structure and Strategy [/bjc-r/cur/programming/lists/hof/ttt/02-strategy.html]\
//	 resource: Finding Triples [/bjc-r/cur/programming/lists/hof/ttt/03-triples.html]\
//	 resource: Finding Triples (Continued) [/bjc-r/cur/programming/lists/hof/ttt/04-triples2.html]\
//	 resource: Find a Winning Square [/bjc-r/cur/programming/lists/hof/ttt/05-winning-square.html]\
//	 resource: Blocking the Opponent [/bjc-r/cur/programming/lists/hof/ttt/06-block-opponent.html]\
//	 resource: Best Free Square  [/bjc-r/cur/programming/lists/hof/ttt/07-best-free.html]\
	 //resource: Make the Game Interactive [/bjc-r/cur/programming/lists/hof/ttt/08-interactive.html] // this has been given in new starter file\
//	 resource: Improving the Strategy  [/bjc-r/cur/programming/lists/hof/ttt/09-improving.html]\
\
\
U4\
\
//raw-html: <div class="todo">The Spam Checking Lab has been commmented out for the 2015-2016 year. --MF</div>\
//heading: Spam Checking\
	//resource: Introduction [/bjc-r/cur/programming/4-internet/p-spam-checking/1-spam-introduction.html]\
	//resource: Text Messages [/bjc-r/cur/programming/4-internet/p-spam-checking/2-the-data.html]\
	//resource: Counting Words [/bjc-r/cur/programming/4-internet/p-spam-checking/3-average-number-of-words.html]\
	//resource: Predictions! [/bjc-r/cur/programming/4-internet/p-spam-checking/4-predict-by-number-of-words.html]\
	//resource: Further work [/bjc-r/cur/programming/4-internet/p-spam-checking/5-further-work.html]\
	\
	\
 U5\
\
	//raw-html: <p>Students add to their <a href="/bjc-r/cur/programming/2-conditionals-abstraction-testing/3-building-more-complex-blocks/2-abstraction-developing-a-number-guessing-game.html?topic=nyc_bjc%2F2-conditionals-abstraction.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">U2L3-GuessNumber</a> project and: <ol><li> Write a block that lets you play the guessing game with the computer (it picks the number and tells you whether you are too high or low).  Develop a strategy. (4 guesses, numbers 1-16)</li><li>Write a block that lets the computer play the guessing game with the you (you pick  the number and tell  the computer whether it is too high or low), using the strategy you developed in 1.</li><li>Write a block that finds a specific number in an ordered list of numbers and reports its position.</li><li>If the list is unordered, what can you do?</li></ol></p><h4>Existing Lab Pages:</h4>\
	//raw-html: <p>Students create a <strong>grapher</strong> program that takes either a function or a list of data points as input and produces its Cartesian graph.  <div class="todo">Paul has written an example, and we can give students pieces of that.</div></p>\
\
U6\
\
//h2: Big Ideas\
//big-idea: Understand the techniques to solving a computer science problem recursively.\
//big-idea: See examples of recursion in nature and art and its relationship to how we already conceptualize various aspects of our world.\
\
//    video: Recursion I [https://coursesharing.org/courses/6/lectures/17]\
//    reading: Blown to Bits, Chapter 5 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter5.pdf]\
\
//h2: Activities\
\
//learning-goal: Explore the idea of representing a problem in terms of itself.\
//learning-goal: Practice planning and coding recursive blocks.\
\
//h2: Reminder\
//big-idea: Make sure you watch the first recursion lecture before doing this lab!\
\
	 //resource: Computer Simulations [/bjc-r/cur/programming/6-recursion/3-work/4-computer-simulations.html]\
\
	\
U7\
\
//h2: Big Ideas\
//big-idea: Relating recursion in programming with inductive function definition\
\
//	video: Recursion II [https://coursesharing.org/courses/6/lectures/19]\
//		video: Take-home midterm exam Wednesday!\
//	video: AI [https://coursesharing.org/courses/6/lectures/22]\
//	reading: Blown to Bits, Chapter 6 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter6.pdf]\
\
//h2: Activities\
\
//learning-goal: Understand how reporters use combiners instead of sequences.\
//learning-goal: Practice planning and coding recursive reporters.\
//learning-goal: Implement higher order functions.\
\
//heading: Cut from U3 L1\
	//resource: Managing List Data [/bjc-r/cur/programming/7-recursive-reporters/fromU3-managing-list-data.html]\
\
U1 TEACHER\
\
//h3: Pacing\
		//raw-html:<p>The two weeks of Programming Labs and one week of Social Implications Labs for Unit 1 can be distributed in whatever way works best with your class. Experiment! Find the rhythm that works for your students. Consider: <ul><li>Working through the four programming labs in the first two weeks and then the social implications lab in the third week as presented below.  This has the advantage of letting students become accustomed to a single style of work over a stretch of time, but the disadvantage of allowing them to view social implications as something artificially tacked onto the course.</li><li>Work through the four programming labs over all three weeks of Unit 1 while concurrently working through the social implications lab (either on specific days of the week or as a part of each class across several days).  This has the advantage of integrating the two main threads of the course in students' minds, but requires them to be able to switch gears frequently.</li></ul></p>\
	\
	//resource: Lab 3: Control Commands [/bjc-r/cur/teaching-guide/U1/lab-pages/3-control-commands.html]\
	//raw-html:<ul><li>2-3 days (may go into second week)</li></ul>\
\
U2 TEACHER\
\
//h3: Pacing\
		//raw-html:<p>The 2 weeks of Programming Labs and 2 weeks of Social Implications Labs for Unit 2 can be distributed in whatever way works best for your class. Experiment! Find the rhythm that works for your students. Here are two possibilities: <ul><li>Work through the 4 programming labs in the first 3 weeks and then the social implications lab in the last week.</li><li>Work through the 4 programming labs while concurrently working through the social implications lab (either on specific days of the week or as a part of each class across several days).</li></ul></p>\
	\
//resource: Additional Problems/Activities [/bjc-r/cur/teaching-guide/U2/extras/W04-activities.html]\
	//resource: Homework Assignments [/bjc-r/cur/teaching-guide/U2/extras/W04-assignments.html]\
\
	//resource: Additional Problems/Activities [/bjc-r/cur/teaching-guide/U2/extras/W05-activities.html]\
	//resource: Homework Assignments [/bjc-r/cur/teaching-guide/U2/extras/W05-assignments.html]\
\
//resource: Additional Problems/Activities [/bjc-r/cur/teaching-guide/U2/extras/W06-activities.html]\
	//resource: Homework Assignments [/bjc-r/cur/teaching-guide/U2/extras/W06-assignments.html] \
\
//heading: Week 7 (Social Implications Focus)\
	//resource: Lab 5: Bits and Information [/bjc-r/cur/teaching-guide/U2/lab-pages/5-bits-and-information.html] \
		//resource: Additional Problems/Activities [/bjc-r/cur/teaching-guide/U2/extras/W07-activities.html]\
		//resource: Homework Assignments [/bjc-r/cur/teaching-guide/U2/extras/W07-assignments.html]\
\
U3 TEACHER\
\
//h3: Pacing\
		//raw-html:<p>The 3 weeks of Programming Labs and 2 weeks of Social Implications Labs for Unit 3 can be distributed as works best for your class. Here are two possibilities: <ul><li>Work through the 4 programming labs in the first 3 weeks and then the social implications Labs 5 and 6 in the last 2 weeks as presented below.</li><li>Work through the 4 programming labs over all 5 weeks while concurrently working through the social implications labs (either on specific days of the week or as a part of each class across several days).</li></ul></p>\
\
//heading: Investigations\
	//resource: Building Musical Chords [/bjc-r/cur/teaching-guide/U3/Investigations/buiding-musical-chords.html] \
	//resource: Processing a Sentence [/bjc-r/cur/teaching-guide/U3/Investigations/processing-a-sentence.html]  \
	//resource: Longest Word [/bjc-r/cur/teaching-guide/U3/Investigations/longest-word.html] \
	//resource: Display Word  [/bjc-r/cur/teaching-guide/U3/Investigations/display-word.html] \
	//resource: Exaggerate [/bjc-r/cur/teaching-guide/U3/Investigations/exaggerate.html] \
	//raw-html: <p>Students can begin work on <a href="http://localhost/bjc-r/cur/programming/3-lists/investigations/chords.html?topic=nyc_bjc%2F3-lists.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">Building Musical Chords</a> and/or <a href="http://localhost/bjc-r/cur/programming/3-lists/investigations/processing-a-sentence.html?topic=nyc_bjc%2F3-lists.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">Processing a Sentence</a>, after Lab 1 where they...</p><p>Students can begin work on <a href="http://localhost/bjc-r/cur/programming/3-lists/investigations/longest-word.html?topic=nyc_bjc%2F3-lists.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">Longest Word</a>, <a href="http://localhost/bjc-r/cur/programming/3-lists/investigations/display-word.html?topic=nyc_bjc%2F3-lists.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">Display Word</a>, and/or <a href="http://localhost/bjc-r/cur/programming/3-lists/investigations/exaggerate.html?topic=nyc_bjc%2F3-lists.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">Exaggerate</a>, after Lab 3 where they...</p>\
\
U4 TEACHER\
\
	//raw-html:<div class="takeNote">Please note: Two new labs have been added on 1/24/16, Number Representation and Weather App.</div>\
\
//h3: Pacing\
	//raw-html:<div class="todo"><h1>This Needs to be Redone --MF</h1></div><p>The slightly more than 2 weeks of Programming Labs and slightly less than 2 weeks of Social Implications Labs for Unit 4 can be distributed as works best for your class. Here are two possibilities: <ul><li>Work through the four programming labs first and then the social implications as presented below.</li><li>Work through the four programming labs over all four weeks while concurrently working through the social implications labs (either on specific days of the week or as a part of each class across several days).</li></ul></p>\
	//raw-html: <div class="time"><ul><li>Lab 3: Number Representation (Content is important for students planning to take the AP exam in 2017.)</li><li>Lab 4: Network Protocols (Content is important for students planning to take the AP exam in 2017.)</li><li>Lab 5: Weather App (You could also do only the first few pages.)</li><li>Lab 6: Internet Security (Content is important for students planning to take the AP exam in 2017.)</li></ul></div>\
\
U5 TEACHER\
\
//h3: Pacing\
	//raw-html:<div class="time"><ul><li>Lab 2: Graphing Data and Functions</li><li>Lab 6: Traffic Simulation</li></ul></div>\
\
U6 TEACHER\
\
h3: Pacing\
		//raw-html:<p>The XX weeks of Programming Labs and one week of Social Implications Labs for Unit 6 can be distributed in whatever way works best with your class. Consider: <ul><li>Working through the two programming labs in the first two weeks and then the social implications lab in the third week as presented below. </li><li>Work through the two programming labs over all three weeks of Unit 6 while concurrently working through the social implications lab (either on specific days of the week or as a part of each class across several days). </li></ul></p>\
\
	//heading: Assessment: TBD\
        //raw-html:<div class="todo">Needs attention</div><p></p>\
	\
U7 TEACHER\
\
//h3: Big Ideas \
        //raw-html:<div class="todo">Needs attention</div><p></p>\
        \
//h3: Computational Thinking Practices\
        //raw-html:<div class="todo">Needs attention</div><p></p>\
	\
h3: Pacing\
		raw-html:<p>The six weeks of Programming Labs (because Lab 3 includes several projects) and one week of Social Implications Labs for Unit 7 can be distributed in whatever way works best with your class. Consider: <ul><li>Working through the four programming labs in the first six weeks and then the social implications lab in the seventh week as presented below.  </li><li>Work through the four programming labs over all seven weeks of Unit 7 while concurrently working through the social implications lab (either on specific days of the week or as a part of each class across several days).</li><li>Consider doing Social Implications Lab 5 <i>before</i> Programming Lab 4, because the latter (in which students build the higher order list functions themselves) makes a thrilling climax to the course.</li></ul></p>\
	\
//heading: Assessment: TBD\
        //raw-html:<div class="todo">Needs attention</div><p></p>\
\
}