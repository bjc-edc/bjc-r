title: Algorithms
{
h1: Formerly Topic 6: Algorithms

h2: Big Ideas
big-idea: Explore how to analyze algorithmic speed and understand various factors that contribute to slow or fast runtimes.
big-idea: Explore the implications of a world increasingly controlled by algorithms.

	video: Algorithms [https://coursesharing.org/courses/6/lectures/14]
	video: How Algorithms Shape Our World [http://www.youtube.com/embed/ENWVRcMGDoU]

h2: Activities
learning-goal: Solidify understanding of what an algorithm is and why they're important to computer science and other fields.
learning-goal: Gain a basic understanding of why certain algorithms perform better than others.
learning-goal: There's often more than one way to solve the same problem. Certain solutions will be superior to others, but very often choosing a solution will require evaluating a list of trade-offs relevant to your particular situation.
learning-goal: Practice implementing algorithms that were discussed verbally.
learning-goal: Memoization is a technique that can be used for improving the performance of algorithms with repeated calculations at the expense of a higher memory requirement.
learning-goal: Hiding algorithmic details behind a layer of abstraction makes it easier to upgrade or adjust your implementation in the future.

	resource: Everyone's Got Algorithms [/bjc-r/cur/programming/algorithms/everyones-got-algorithms.html]

	forum: Trash or Treasure? [/bjc-r/cur/programming/algorithms/trash-or-treasure.html]
	// forum: Trash or Treasure? [http://veritas.eecs.berkeley.edu/courses/mod/forum/view.php?id=1773]
	resource: (group work) Experiencing Algorithms [/bjc-r/cur/programming/algorithms/experiencing-algorithms.html]
	// resource: (group work) Searching [/bjc-r/cur/programming/algorithms/group-work-searching.html]
	// resource: (group work) The Need for Speed [/bjc-r/cur/programming/algorithms/group-work-the-need-for-speed.html]
	resource: Algorithms in <span class="snap">snap</span> [/bjc-r/cur/programming/algorithms/algorithms-in-snap.html]
	resource: Improving Our Number Finder [/bjc-r/cur/programming/algorithms/improving-our-number-finder.html]
	resource: Too Many Blocks! [/bjc-r/cur/programming/algorithms/too-many-blocks.html]


h1: Formerly Topic 7: Algorithm Complexity

h2: Big Ideas
big-idea: Explore the implications of computing and technology on our culture and institutions
big-idea: Understand Moore's law and the technical limitations and hurdles the hardware industry is facing as it develops the next generation of computers

	video: Algorithmic Complexity [https://coursesharing.org/courses/6/lectures/15]
	reading: How Moore's Law Works [http://computer.howstuffworks.com/moores-law.htm]
	reading: The Free Lunch is Over [http://www.gotw.ca/publications/concurrency-ddj.htm]

h2: Activities
learning-goal: Use the <span class="snap">snap</span>  timer to gather run time information
learning-goal: Observe the difference between constant, linear, quadratic and logarithmic run times.

heading: Introduction
	resource: A (non-video) Game [/bjc-r/cur/programming/algorithms/a-non-video-game.html]
	resource: Competing with Young Gauss [/bjc-r/cur/programming/algorithms/competing-with-young-gauss.html]

heading: Timing Experiments
	resource: Time is of the Es-sense [/bjc-r/cur/programming/algorithms/timing/time-is-of-the-es-sense.html]
	resource: Do You Have Time to Add? [/bjc-r/cur/programming/algorithms/timing/do-you-have-time-to-add.html] 
	resource: Constant-Time [/bjc-r/cur/programming/algorithms/timing/constant-time.html]
	resource: All the Numbers, All the Time [/bjc-r/cur/programming/algorithms/timing/all-the-numbers-all-the-time.html]
	resource: Linear-Time [/bjc-r/cur/programming/algorithms/timing/linear-time.html]
	quiz: Searching Through Time [/bjc-r/cur/programming/algorithms/timing/quiz-searching-through-time.html]
	resource: Timing Sum-thing's Up [/bjc-r/cur/programming/algorithms/timing/timing-sum-things-up.html]
	resource: Constant versus Linear [/bjc-r/cur/programming/algorithms/timing/constant-versus-linear.html]
	resource: A Distinct Difference [/bjc-r/cur/programming/algorithms/timing/a-distinct-difference.html]
	resource: Quadratic-Time [/bjc-r/cur/programming/algorithms/timing/quadratic-time.html]
	resource: Logarithmic-Time [/bjc-r/cur/programming/algorithms/timing/logarithmic-time.html]

	assignment: Evil Hangman [/bjc-r/cur/programming/projects/hangman/evil-hangman.html]
	
}
