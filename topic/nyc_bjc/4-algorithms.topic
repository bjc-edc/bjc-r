title: Unit 4: Algorithm Complexity
{
//h1: Formerly Topic 6: Algorithms

//h2: Big Ideas
//big-idea: Explore how to analyze algorithmic speed and understand various factors that contribute to slow or fast runtimes.
//big-idea: Explore the implications of a world increasingly controlled by algorithms.

//	video: Algorithms [https://coursesharing.org/courses/6/lectures/14]
//	video: How Algorithms Shape Our World [http://www.youtube.com/embed/ENWVRcMGDoU]

//h2: Activities
//learning-goal: Solidify understanding of what an algorithm is and why they're important to computer science and other fields.
//learning-goal: Gain a basic understanding of why certain algorithms perform better than others.
//learning-goal: There's often more than one way to solve the same problem. Certain solutions will be superior to others, but very often choosing a solution will require evaluating a list of trade-offs relevant to your particular situation.
//learning-goal: Practice implementing algorithms that were discussed verbally.
//learning-goal: Memoization is a technique that can be used for improving the performance of algorithms with repeated calculations at the expense of a higher memory requirement.
//learning-goal: Hiding algorithmic details behind a layer of abstraction makes it easier to upgrade or adjust your implementation in the future.

heading: Programming Lab 1: List Manipulation
	// resource: Everyone's Got Algorithms [/bjc-r/cur/programming/algorithms/everyones-got-algorithms.html]
	resource: Getting Started [/bjc-r/cur/programming/4-algorithms/1-list-manipulation/1-getting-started.html]
	// forum: Trash or Treasure? [/bjc-r/cur/programming/algorithms/trash-or-treasure.html]
	// forum: Trash or Treasure? [http://veritas.eecs.berkeley.edu/courses/mod/forum/view.php?id=1773]
	resource: (group work) Experiencing Algorithms [/bjc-r/cur/programming/4-algorithms/1-list-manipulation/2-experiencing-algorithms.html]
	// resource: (group work) Searching [/bjc-r/cur/programming/algorithms/group-work-searching.html]
	// resource: (group work) The Need for Speed [/bjc-r/cur/programming/algorithms/group-work-the-need-for-speed.html]
	resource: Algorithms in <span class="snap">snap</span> [/bjc-r/cur/programming/4-algorithms/1-list-manipulation/3-algorithms-in-snap.html]
	resource: Improving Our Number Finder [/bjc-r/cur/programming/4-algorithms/1-list-manipulation/4-improving-our-number-finder.html]
	resource: Too Many Blocks! [/bjc-r/cur/programming/4-algorithms/1-list-manipulation/5-too-many-blocks.html]


//h1: Formerly Topic 7: Algorithm Complexity

//h2: Big Ideas
//big-idea: Explore the implications of computing and technology on our culture and institutions
//big-idea: Understand Moore's law and the technical limitations and hurdles the hardware industry is facing as it develops the next generation of computers

//	video: Algorithmic Complexity [https://coursesharing.org/courses/6/lectures/15]
//	reading: How Moore's Law Works [http://computer.howstuffworks.com/moores-law.htm]
//	reading: The Free Lunch is Over [http://www.gotw.ca/publications/concurrency-ddj.htm]

//h2: Activities
//learning-goal: Use the Snap<em>!</em>  timer to gather run time information
//learning-goal: Observe the difference between constant, linear, quadratic and logarithmic run times.

heading: Lab 2: Algorithm Complexity
	resource: A (non-video) Game [/bjc-r/cur/programming/4-algorithms/2-algorithm-complexity/1-a-non-video-game.html]
	resource: Competing with Young Gauss [/bjc-r/cur/programming/4-algorithms/2-algorithm-complexity/2-competing-with-young-gauss.html]

heading: Lab 3: Timing Experiments
	resource: Time is of the Es-sense [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/1-time-is-of-the-es-sense.html]
	resource: Do You Have Time to Add? [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/2-do-you-have-time-to-add.html]
	resource: Constant-Time [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/3-constant-time.html]
	resource: All the Numbers, All the Time [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/4-all-the-numbers-all-the-time.html]
	resource: Linear-Time [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/5-linear-time.html]
	quiz: Searching Through Time [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/6-quiz-searching-through-time.html]
	resource: Timing Sum-thing's Up [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/7-timing-sum-things-up.html]
	resource: Constant versus Linear [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/8-constant-versus-linear.html]
	resource: A Distinct Difference [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/9-a-distinct-difference.html]
	resource: Quadratic-Time [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/10-quadratic-time.html]
	resource: Logarithmic-Time [/bjc-r/cur/programming/4-algorithms/3-timing-experiments/11-logarithmic-time.html]

	assignment: Evil Hangman [/bjc-r/cur/programming/projects/hangman/evil-hangman.html]

 	raw-html: <hr />

heading: Social Implications Lab 5: Copyright; Media and Sharing; Patents
	 resource: Getting Started [/bjc-r/cur/programming/4-algorithms/5-copyright/0-gs.html]
	 resource: Stroke of Genius? [/bjc-r/cur/programming/4-algorithms/5-copyright/1-gray.html]
	 resource: How Inventions Happen [/bjc-r/cur/programming/4-algorithms/5-copyright/2-invent.html]
	 resource: Big Questions [/bjc-r/cur/programming/4-algorithms/5-copyright/big-questions.html]
	 resource: Copyright [/bjc-r/cur/programming/4-algorithms/5-copyright/copyright.html]
	 resource: Media [/bjc-r/cur/programming/4-algorithms/5-copyright/media.html]
	 resource: Patents [/bjc-r/cur/programming/4-algorithms/5-copyright/patents.html]
	 resource: Blown to Bits Chapter 6 [/bjc-r/cur/programming/4-algorithms/5-copyright/btb-chapter6.html]

heading: Social Implications Lab 6: Censorship and Regulation; Computing around the World; Computing in War
	 resource: Big Questions [/bjc-r/cur/programming/4-algorithms/6-censorship/big-questions.html]
	 resource: Censorship and Regulation [/bjc-r/cur/programming/4-algorithms/6-censorship/censorship.html]
	 resource: Computing around the World [/bjc-r/cur/programming/4-algorithms/6-censorship/computing-world.html]
	 resource: Computing in War [/bjc-r/cur/programming/4-algorithms/6-censorship/computing-war.html]
	 resource: Blown to Bits Chapter 7 [/bjc-r/cur/programming/4-algorithms/6-censorship/btb-chapter7.html]
	 resource: Blown to Bits Chapter 8 [/bjc-r/cur/programming/4-algorithms/6-censorship/btb-chapter8.html]

heading: Social Implications Lab 7: Innovations; Computing in Other Fields; Computing in Work
	 resource: Big Questions [/bjc-r/cur/programming/4-algorithms/7-innovations/big-questions.html]
	 resource: Innovations [/bjc-r/cur/programming/4-algorithms/7-innovations/innovations.html]
	 resource: Computing in Other Fields [/bjc-r/cur/programming/4-algorithms/7-innovations/computing-other.html]
	 resource: Computing in Work [/bjc-r/cur/programming/4-algorithms/7-innovations/computing-work.html]
	 resource: Blown to Bits Conclusion [/bjc-r/cur/programming/4-algorithms/7-innovations/btb-conclusion.html]

 	raw-html: <hr />

heading: Investigations
	 resource: FROM UNIT 3 Building Musical Chords (Use after Lab 1) [/bjc-r/cur/programming/3-lists/investigations/chords.html]


}
