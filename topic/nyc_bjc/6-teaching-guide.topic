title: Teaching Guide for Unit 1: Introduction to Snap<em>!</em> Programming

{

h3: Purpose
	raw-html:<div class="comment"><p><a href="/bjc-r/cur/teaching-guide/U6/u5-main.html?course=bjc4nyc_2015-2016_teacher.html&novideo&noassignment">Old Recursion TG</a></p><p><a href="/bjc-r/topic/topic.html?topic=nyc_bjc/6-recursion-trees-fractals.topic&course=bjc4nyc_2015-2016.html&novideo&noassignment">U6 Student Labs</a></p></div><p><img class="imageRight noshadow" src="/bjc-r/img/6-recursion/vee-simple.png" alt="V shape with decorations" title="V shape with decorations" />Recursion and functional programming are two programming techniques that go beyond the Framework requirements, but are at the heart of what makes BJC unique. Unit 6 is about recursive commands, mainly fractals. It starts with a teacher demonstration of the Vee project, in which a short program generates V shapes with randomly chosen decorations at the ends.</p><p>The same program suddenly generates arbitrarily complex results if the Vee procedure itself is added to the list of possible decorations. This is a teacher demonstration rather than an independent lab activity because the collective gasp of the class is itself a valuable learning experience.</p><p><img class="imageRight noshadow" src="/bjc-r/img/6-recursion/vee-complex.png" alt="vee calling vee" title="vee calling vee" />After the demonstration, students develop their own fractal tree program by building up from small cases (a one-level tree is just a trunk; a two-level tree is a trunk with a vee above it, etc.) so that they are not confronted at first with the seeming “cheating” of a procedure calling itself. Only after they’ve written several almost-identical procedures does the lab suggest combining them into one. The students then discover why recursive procedures need a base case to terminate the recursion.</p><p>Once the tree fractal is thoroughly understood, students go on to construct other common fractals (Koch snowflake, Sierpinski gasket, etc.).</p><p>The elegance of the programs themselves helps students see computer programs, and not just the effects they produce, as things of beauty. A key moment in developing that sense is when students understand how a short recursive procedure can generate a deeply complex computational process.</p><div class="comment">Does it??? --MF</div><p>This unit also contains a Social Implications lab exploring the effects of computers on jobs (including both the displacement of old categories of work by new ones and the on-the-job experience of workers whose output is measured by computers) and on warfare (with an emphasis on drones and why they make a qualitative difference in the political cost of war).</p>
	
h3: Pacing
		raw-html:<div class="todo">Copied from U1!!! --MF</div><p>The two weeks of Programming Labs and one week of Social Implications Labs for Unit 1 can be distributed in whatever way works best with your class. Experiment! Find the rhythm that works for your students. Consider: <ul><li>Working through the five programming labs in the first two weeks and then the social implications lab in the third week as presented below.  This has the advantage of letting students become accustomed to a single style of work over a stretch of time, but the disadvantage of allowing them to view social implications as something artificially tacked onto the course.</li><li>Work through the five programming labs over all three weeks of Unit 1 while concurrently working through the social implications lab (either on specific days of the week or as a part of each class across several days).  This has the advantage of integrating the two main threads of the course in students' minds, but requires them to be able to switch gears frequently.</li></ul></p>
	
h3: Big Ideas 
        raw-html:<div class="todo">Needs attention</div><p></p>
        
h3: Computational Thinking Practices
        raw-html:<div class="todo">Needs attention</div><p></p>
	
heading: Week X (Programming Focus)
	resource: Lab 1: Trees in a Forest [/bjc-r/cur/teaching-guide/U6/lab-pages/1-trees-in-a-forest.html]
	raw-html:<ul><li>X-X days</li></ul>
	resource: Lab 2: Fractals [/bjc-r/cur/teaching-guide/U6/lab-pages/2-fractals.html]
	raw-html:<ul><li>X-X days</li></ul>
	
heading: Assessment: TBD
        raw-html:<div class="todo">Needs attention</div><p></p>
}
