title: Teaching Guide for Unit 1: Introduction to Programming

{

h3: Purpose
	raw-html:<p><strong>Programming Focus:</strong> Introduction to <span class="snap">snap</span>, Creating custom procedures, Abstraction</p>
    	raw-html:<p>In the first lab, students dive right into creating a simple game-app that they can share with their smart-phone. They learn several technical details: how to log in, save work, and build scripts. Two additional programming labs cover sprite interaction (conversations, remembering player names, following objects) and drawing; students learn to "package" a script by building a custom block (procedure) and how to add input parameters.</p><p>Encourage students to <em>experiment</em> with Snap<em>!</em>: playing with inputs, trying out blocks before they have been formally introduced, and modifying and extending the assigned tasks. Creativity is a Big Idea of AP CS Principles and a core element of BJC.</p>
	raw-html:<p><strong>Social Implications Focus:</strong> Digital Privacy</p>
		raw-html:<p>Students begin a year-long inquiry into the social implications of computing by first examining the role of technology in their own privacy, and they also begin to explore the general question of whether or to what extent technology is good or bad.  They consider the innovations around us that collect data about us, the availability of information online, why privacy is good to protect, reasons for giving up privacy, and how to best protect their own online privacy. Review the teacher support on <a href="/bjc-r/cur/teaching-guide/U1/general-support/discussion.html">Facilitating Classroom Discussion</a>.</p>
		raw-html:<p>Start class with 3-5 minutes of <a href="/bjc-r/cur/teaching-guide/U1/general-support/computing-in-the-news.html?topic=nyc_bjc%2F1-teaching-guide.topic&course=bjc4nyc_2015-2016_teacher.html&novideo&noassignment">Computing in the News</a> as often as possible (at least at the start of each week or lab). The goal is to quickly and regularly highlight ongoing technological developments without letting it take over the class period. </li></ul></div>
		

h3: Big Ideas 1, 2, 4, 5, 7
        raw-html:<p>Students are introduced to foundational concepts of <strong>programming (Big Idea 5)</strong> including loops, variables, and procedures, and apply these in small programming projects in which they are encouraged to explore creatively and embellish their programs to support the <strong>creative (Big Idea 1)</strong> development of interesting computational artifacts. As students learn to develop and evaluate <strong>algorithms (Big Idea 4)</strong> for implementation and execution on a computer, they see that complex programs can be simplified by using <strong>abstraction (Big Idea 2)</strong> to manage the complexity. Unit 1 includes a Social Implications lab addressing online privacy, beginning a study of <strong>global impact (Big Idea 7)</strong> that is maintained throughout the course. </p>
        
h3: Computational Thinking Practices P3, P4, P5, P6 
        raw-html:<p>One way students develop their computational thinking skills is through programming and analyzing the programs of others. For example, students edit existing blocks and are asked to predict what they think will result from a given Snap<em>!</em> script. Making predictions requires students to make sense of the sequential nature of the code.</p><p>Students are introduced to one use of <strong>abstracting (P3)</strong> in packaging a collection of details in a form that more clearly expresses their meaning or purpose (such as creating a block that will draw polygons with specific characteristics (e.g., size, number of sides). They will expand their understanding of abstraction throughout the course.</p><p>The emphasis on Pair Programming in Unit 1 establishes the regular practice of <strong>communicating (P5)</strong> and <strong>collaborating (P6)</strong> to solve problems.</p><p>Students <strong>analyze problems (P4)</strong> about the broader world and <strong>connect computing (P1)</strong> to issues they can identify with&mdash;both the impacts of computing and the connections between people and computing. Students cultivate analytic thinking skills as they debate and sometimes write about important and complex social issues.</p>

		
h3: edX BJC Videos
		raw-html:<p>There are a number of BJC videos from the edX version of the curriculum that are relevant to Unit 1. These are available on the <a href="/bjc-r/cur/teaching-guide/resources/video-list.html">edX BJC Videos</a> page.</p>
			
h3: Student Labs
	raw-html: <div class="comment">Timing still needs some adjustment as TG is finished. --MF</div>
	resource: Lab 1: Click Alonzo Game [/bjc-r/cur/teaching-guide/U1/lab-pages/1-click-alonzo-game.html]
	raw-html:<ul><li>3-5 days (100-195 minutes)</li></ul>
	resource: Lab 2: Sprite Conversation [/bjc-r/cur/teaching-guide/U1/lab-pages/2-sprite-conversation.html]
	raw-html:<ul><li>2-3 days (55-110 minutes)</li></ul>
	resource: Lab 3: Modern Art with Polygons [/bjc-r/cur/teaching-guide/U1/lab-pages/3-modern-art-polygons.html]
	raw-html:<ul><li>4-7 days (145-270 minutes)</li></ul>
	resource: Lab 4: Privacy [/bjc-r/cur/teaching-guide/U1/lab-pages/4-privacy.html]
	raw-html:<ul><li>2-3 days (80-115 minutes) for required pages <strong>Edit ???</strong></li></ul>
	resource: Optional Projects [/bjc-r/cur/teaching-guide/U1/lab-pages/U1-optional-projects.html]

h3: Assessment: eCard Project
		raw-html: <p><div class="sidenote">If you need to know what an eCard is, click <a href="https://www.google.com/search?q=ecard" target="_blank">here</a>.</div>Have students create an eCard that meets <a href="https://docs.google.com/document/d/1-3vj9J8aFo60Y2AWAAcEulWetpaS2basQHmf2Kkr4S8/edit?usp=sharing" target="_blank">these specifications</a>. In preparation for the <a href="http://media.collegeboard.com/digitalServices/pdf/ap/ap-computer-science-principles-performance-assessment.pdf#page=3" target="_blank">AP Create Task</a>, students describe the purpose of their program in 100 words or less and, if necessary, how to use it.</p>	
		raw-html:<div class="comment">Is this Sound files sidenote still relevant? --MF, 3/7/17</div><div class="endnote"><strong>Note: Sound files</strong> can be imported into Snap<em>!</em> projects, but which media types work depends on the local computer's browser and security settings. Regarding file size, there is no limit, but it's not a great idea to upload massive media in limited bandwidth situations. Especially when several people upload a lot of media at around the same time, bandwidth will go down and transfers can slow or timeout. Classrooms with limited bandwidth connections may opt to avoid sound importing altogether. <strong>Massive media projects are fun, but only with adequate hardware and network resources.</strong></div>
		
}
