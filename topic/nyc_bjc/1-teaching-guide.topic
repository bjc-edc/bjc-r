title: Teaching Guide for Unit 1: Introduction to Programming

{

h3: Purpose
	raw-html:<p><strong>Programming Focus:</strong> Introduction to <span class="snap">snap</span>, Creating custom procedures, Abstraction</p>
		raw-html:<p>From the <em>student's</em> point of view, each of the programming labs is about what we hope will be an engaging project focus: Lab 1 is an interactive game students can install on their phones; Lab 2 is about conversation between animated characters; Lab 3 is about abstract art; and Lab 5 is a step toward storytelling animation through sprite interaction. But from the <em>teacher's</em> point of view, each has a coherent computer science goal: Lab 1 is a <em>quick</em> (ideally, the first <em>day</em> of class) project to get students through the mechanics of using Snap<em>!</em> and to have a positive experience quickly; Lab 2 is mainly about functions (reporters) and composition of functions; Lab 3 is about traditional turtle graphics and abstraction; Lab 5 is about multithreaded programming and how sprites can be aware of each other.
		raw-html:<p>The overarching big computer science idea is <em>abstraction,</em> and in fact this will be a key idea in <em>every</em> unit.  Here, abstraction takes the form of <em>writing procedures</em> ("custom blocks," in Snap<em>!</em>&#x2011;speak).  Every student-written procedure is a mild form of abstraction; deeper views of abstraction come later.
    	//raw-html:<p>Throughout the unit, students learn to "package" a script by building a custom block (procedure) and how to add input parameters. This is the beginning of a yearlong focus on abstraction. The unit also introduces the design elements of the curriculum itself: Green boxes ("For You To Do") are for exercises; orange boxes are important text that even text-skippers should read; yellow boxes are for text that students can safely skip, but that point to side paths or reinforce the main points. Blue boxes ("If There Is Time") are additional exercises that are useful, not simply redundant, but that can be skipped without leaving students unprepared for later pages. It's up to you to decide which of these to assign to the class. Purple boxes ("Take It Further") are differentiated learning for the fastest and most interested students; our intention is that they be self-assigned, not assigned by you to the entire class. They have little handholding and can take quite a long time. Encourage individual students to do them at home. The pink boxes at the top of lab pages give very short overviews, for students, of the plan of the entire lab and of the individual page. Don't dwell on these, but certain students' learning styles will benefit from advance notice of what they're working toward on a page. Grey boxes (we chose the neutral color deliberately as a subtle hint that these aren't part of the beauty and joy we strive for elsewhere) are for AP exam vocabulary words. Encourage students <em>not</em> to spend time reading them in class, but to come back to them for vocabulary review. Please resist any temptation to make a big fuss about vocabulary.</p><p>Encourage students to <em>experiment</em> with Snap<em>!</em>: playing with inputs, trying out blocks before they have been formally introduced, and modifying and extending the assigned tasks. Creativity is a Big Idea of AP CS Principles and a core element of BJC.</p>
	raw-html:<p><strong>Social Implications Focus:</strong> Digital Privacy</p>
		raw-html:<p>In Lab 4, students begin a yearlong inquiry into the social implications of computing by first examining the role of technology in their own privacy. They consider the innovations around us that collect data about us, the availability of information online, why privacy is good to protect, reasons for giving up privacy, and how to best protect their own online privacy.</p>
		raw-html:<p>For every discussion of social implications, try hard to get past "is this good or bad?" and instead focus on "what improvements to the design of the technology itself or to the social environment (such as laws and regulations) would keep the good parts without the bad parts?" This focus gives students an engineering perspective and also a sense of agency; it's up to us&mdash;up to them, in the future&mdash;how technology is used.</p>
		//raw-html:<p>There's no particular reason why we put the Social Implications topic in the next-to-last position in the unit; we did want to avoid making it last so that students (and teachers!) won't view social topics as an arbitrary add-on.</p>
		raw-html:<p>Start class with five minutes of <a href="/bjc-r/cur/teaching-guide/U1/general-support/computing-in-the-news.html?topic=nyc_bjc%2F1-teaching-guide.topic&course=bjc4nyc_2015-2016_teacher.html&novideo&noassignment" title="Computing in the News">Computing in the News</a> as often as possible (at least at the start of each week or lab, preferably daily). The goal is to quickly and regularly highlight how computing is constantly affecting our lives in new ways, without letting it take over the class period. </li></ul></div>
		
h3: 2020 Big Ideas: CRD, AAP, IOC; and Computational Thinking Practices and Skills: 1.C, 2.A, 2.B, 3.B, 4.A, 4.B, 5.D, 5.E, 6.A
        raw-html:<p>As students work through the programming activities described above, they learn how to create, call, and determine the outcome of calling procedures (Big Idea: <strong>AAP</strong>); use procedures to manage program complexity (Skill: <strong>3.B</strong>); generate random values (Big Idea: <strong>AAP</strong>); pair program (Skills: <strong>1.C</strong>, <strong>6.A</strong>; Big Idea: <strong>CRD</strong>); create program documentation (Skills: <strong>2.B</strong>, <strong>4.A</strong>, <strong>4.B</strong>; Big Ideas: <strong>CRD</strong>, <strong>AAP</strong>); and express an algorithm without using a programming language (Skill: <strong>2.A</strong>; Big Idea: <strong>AAP</strong>). In their study of social implications, students investigate legal and ethical issues that arise in computing&mdash;especially with regard to data collection and privacy (Skills: <strong>5.D</strong>, <strong>5.E</strong>; Big Idea: <strong>IOC</strong>).</p>

h3: 2020 Enduring Understandings: CRD-1, CRD-2, AAP-2, AAP-3, IOC-1, IOC-2
        raw-html:<p>In Lab 2: Gossip, students begin collaborating in problem solving (<strong>CRD-1</strong>); building, testing, and improving on their own functions (<strong>CRD-2</strong>); determining the result of expressions (<strong>AAP-2</strong>); and remixing existing functions (<strong>AAP-3</strong>). In Lab 3: Modern Art with Polygons, they begin writing program documentation to describe their code (<strong>CRD-2</strong>); describing algorithms that use sequencing and iteration (<strong>AAP-2</strong>); and developing and remixing procedures and interpreting procedure calls (<strong>AAP-3</strong>). In Lab 4: Protecting Your Privacy, they begin their study of the unintended consequences and possible risks of computing innovations (<strong>IOC-1</strong>, <strong>IOC-2</strong>). </p>
		
h3: edX BJC Videos
		raw-html:<p>There are a number of BJC videos from the edX version of the curriculum that are relevant to Unit 1. These are available on the <a href="/bjc-r/cur/teaching-guide/resources/video-list.html" title="edX BJC Videos">edX BJC Videos</a> page.</p>
			
h3: Student Labs
        resource: Lab 1: Click Alonzo Game [/bjc-r/cur/teaching-guide/U1/lab-pages/1-click-alonzo-game.html]
        //raw-html:<ul><li>2-3 days (55-110 minutes) for required pages</li></ul>
        resource: Lab 2: Gossip [/bjc-r/cur/teaching-guide/U1/lab-pages/2-gossip.html]
        //raw-html:<ul><li>2-3 days (65-130 minutes)</li></ul>
        resource: Lab 3: Modern Art with Polygons [/bjc-r/cur/teaching-guide/U1/lab-pages/3-modern-art-polygons.html]
        //raw-html:<ul><li>3-5 days (105-210 minutes) for required pages</li></ul>
        resource: Lab 4: Protecting Your Privacy [/bjc-r/cur/teaching-guide/U1/lab-pages/4-privacy.html]
        //raw-html:<ul><li>2-4 days (80-165 minutes)</li></ul>
        resource: Lab 5: Follow the Leader [/bjc-r/cur/teaching-guide/U1/lab-pages/5-follow-the-leader.html]
        //raw-html:<ul><li>no required pages</li></ul>
        resource: Optional Projects [/bjc-r/cur/teaching-guide/U1/lab-pages/U1-optional-projects.html]

h3: AP Classroom
        raw-html: <p>After Unit 1, the following AP CSP topics have been covered completely. You may choose to use the <a href="https://myap.collegeboard.org/login" title="AP Classroom" target="_blank">AP Classroom</a> formative assessment practice questions for the following topics:<ul>
            raw-html: <li><strong>3.4 Strings</strong> (covered in <a href="/bjc-r/cur/teaching-guide/U1/lab-pages/2-gossip.html?topic=nyc_bjc%2F1-teaching-guide.topic&course=bjc4nyc_teacher.html&novideo&noassignment" title="Unit 1 Lab 2: Gossip">Unit 1 Lab 2: Gossip</a>)</li>
        raw-html: </ul></p>
    
h3: Assessment: eCard Project
		raw-html: <p><div class="sidenoteBig">If you need to know what an eCard is, click <a href="https://www.duckduckgo.com?q=ecard" target="_blank" title="Google: eCard" >look it up</a>.</div>Have students create an eCard that meets <a href="https://docs.google.com/document/d/1-3vj9J8aFo60Y2AWAAcEulWetpaS2basQHmf2Kkr4S8/edit?usp=sharing" target="_blank" title="e-Card specs">these specifications</a>. In preparation for the <a href="http://media.collegeboard.com/digitalServices/pdf/ap/ap-computer-science-principles-performance-assessment.pdf#page=3" target="_blank" title="AP CSP Create Performance Task">AP Create Task</a>, students describe the purpose of their program in 100 words or less and, if necessary, how to use it.</p>	
		raw-html:<div class="endnote"><strong>Note: Sound files</strong> can be imported into Snap<em>!</em> projects, but which media types work depends on the local computer's browser and security settings. Regarding file size, there is no fixed limit, but it's not a great idea to upload massive media in limited bandwidth situations. Especially when several people upload a lot of media at around the same time, bandwidth will go down and transfers can slow or timeout. Classrooms with limited bandwidth connections may opt to avoid sound importing altogether. <strong>Massive media projects are fun, but only with adequate hardware and network resources.</strong></div>
		
}
