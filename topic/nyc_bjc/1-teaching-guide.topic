title: Teaching Guide for Unit 1: Introduction to Snap<em>!</em> Programming

{

h3: Purpose
	raw-html:<div class="todo">Need to add a note to teachers about why MP3s aren't working for them. From Jens: "which media types work depends on the browser and security settings, not on Snap. Snap supports anything the browser supports. There must be something in that school's security settings that prevents mp3's in browsers." <br /><br />Also, regarding file size, from Jens: "the is no limit, but it's not a great idea to upload massive media in limited bandwidth situations. You know, especially when a whole class uploads a lot of media more or less at the same time, bandwidth will go down. There is no way for Snap to find this out, however. I have projects with over 50 MB's of media and they work just fine (although for other reasons that might not be such a good idea ^^)"<br /><br />"massive media projects... are fun, but remember, you need adequate hardware and network resources to have fun with those"</div>
	raw-html:<p><strong>Programming Focus:</strong> Introduction to <span class="snap">snap</span>, Abstraction</p>
    raw-html:<p>Students dive right into <span class="snap">snap</span> programming by designing games and visual projects using loops, randomness, and control blocks. They get to know the <span class="snap">snap</span> interface,  coordinate system, sounds, mathematics, variables, and how to build their own blocks. Encourage students to <em>experiment</em> with <span class="snap">snap</span>, playing with inputs, trying out blocks before they have been formally introduced, and modifying and extending the assigned tasks. Creativity is a Big Idea of AP CS Principles and a core element of BJC.</p>
	raw-html:<p><strong>Social Implications Focus:</strong> Privacy, Games, and the Nature of Technology</p>
	raw-html:<p>Students  discuss social implications of computing, including video games, privacy, and an introduction to the general question of whether or to what extent technology is good or bad.  Review the teacher support on <a href="/bjc-r/cur/teaching-guide/U1/general-support/discussion.html" target="_blank">Facilitating Classroom Discussion</a>.</p>
	
h3: Pacing
	raw-html:<p>The two weeks of Programming Labs and one week of Social Implications Labs for Unit 1 can be distributed in whatever way works best with your class. Experiment! Find the rhythm that works for your students. Consider: <ul><li>Working through the five programming labs in the first two weeks and then the social implications lab in the third week as presented below.  This has the advantage of letting students become accustomed to a single style of work over a stretch of time, but the disadvantage of allowing them to view social implications as something artificially tacked onto the course.</li><li>Work through the five programming labs over all three weeks of Unit 1 while concurrently working through the social implications lab (either on specific days of the week or as a part of each class across several days).  This has the advantage of integrating the two main threads of the course in students' minds, but requires them to be able to switch gears frequently.</li></ul></p>
	
h3: Highlighting Computational Thinking
	raw-html: <p>One way students develop their computational thinking skills is through direct experience with <span class="snap">snap</span>. For example, students are frequently asked to predict what they think will result from a given <span class="snap">snap</span> script. Making such predictions requires students to make sense of the sequential nature of the code. Students are introduced to the process of <strong>abstracting</strong> and will experience this way of thinking as they learn what details they can manipulate or safely overlook in a script. They will expand this idea of abstraction throughout the course. The emphasis on Pair Programming in Unit 1 is meant to help students in <strong>communicating</strong> and <strong>collaborating</strong> in solving problems; it is also common practice in industry, not just a pedagogical device. Finally, students engage with the broader world of computing by exploring  its impacts. As students  debate and sometimes write about important and complex social issues, they develop analytic thinking skills.</p>
	
heading: Week 1 (Programming Focus)
	resource: Lab 1: Building an App [/bjc-r/cur/teaching-guide/U1/lab-pages/1-building-an-app.html]
	raw-html:<ul><li>1-2 days</li></ul>
	resource: Lab 2: Sprite Drawing and Communication [/bjc-r/cur/teaching-guide/U1/lab-pages/2-sprite-drawing-communication.html]
	raw-html:<ul><li>2-3 days</li></ul>
	resource: Lab 3: Control Commands [/bjc-r/cur/teaching-guide/U1/lab-pages/3-control-commands.html]
	raw-html:<ul><li>2-3 days (may go into second week)</li></ul>

heading: Week 2 (Programming Focus)
	resource: Lab 4: Building and Debugging Your Own Blocks [/bjc-r/cur/teaching-guide/U1/lab-pages/4-make-your-own-blocks.html]
	raw-html:<ul><li>2-3 days</li></ul>
	resource: Lab 5: Block Types and Calculations [/bjc-r/cur/teaching-guide/U1/lab-pages/5-block-types.html]
	raw-html:<ul><li>1-2 days</li></ul>
	
heading: Week 3 (Social Implications Focus)
	resource: Lab 6: Explosion of Bits; Games and Violence [/bjc-r/cur/teaching-guide/U1/lab-pages/6-explosion-bits-games-violence.html] 

heading: Assessment: eCard Project
	raw-html: <div><p>Have students create an <a href="https://www.google.com/search?q=ecard" target="_blank">eCard</a> that meets the specifications described <a href="https://docs.google.com/document/d/1-3vj9J8aFo60Y2AWAAcEulWetpaS2basQHmf2Kkr4S8/edit?usp=sharing" target="_blank">here</a>. In preparation for the AP Create Task, students will, in 100 words or less, describe the purpose of their program and, if necessary, how to use it.</div>	
}
