title: Teaching Guide for Unit 1: Introduction to Programming

{

h3: Purpose
	raw-html:<p><strong>Programming Focus:</strong> Introduction to <span class="snap">snap</span>, Abstraction</p>
    	raw-html:<p>In the very first lab, students dive right into creating a simple game-app that they can share with their smart-phone. They learn several technical details: how to log in; save work; build scripts; "package" a script by building a custom block (procedure) with input parameters; get a sprite to draw, follow a motion, and interact with another sprite. <s>Then they begin their second creative project, building a block that can produce grids of various dimensions for games like Tic Tac Toe and Sudoku. They learn how Snap<em>!</em> can perform calculations for them, and how to use those calculations to automate the process of fitting the game board grids to the screen. The projects emphasize the sensible use of abstraction as an organizing and simplifying tool.</s></p><p>Encourage students to <em>experiment</em> with Snap<em>!</em>, playing with inputs, trying out blocks before they have been formally introduced, and modifying and extending the assigned tasks. Creativity is a Big Idea of AP CS Principles and a core element of BJC.</p>
	raw-html:<p><strong>Social Implications Focus:</strong> Privacy<s>, Games, and the Nature of Technology</p>
		raw-html:<p>Students discuss social implications of computing, including video games, privacy, and an introduction to the general question of whether or to what extent technology is good or bad.</s>  Review the teacher support on <a href="/bjc-r/cur/teaching-guide/U1/general-support/discussion.html">Facilitating Classroom Discussion</a>.</p>
		raw-html:<p>Start class with <a href="/bjc-r/cur/teaching-guide/U1/general-support/computing-in-the-news.html?topic=nyc_bjc%2F1-teaching-guide.topic&course=bjc4nyc_2015-2016_teacher.html&novideo&noassignment">Computing in the News</a> as often as possible (at least at the start of each week or lab).</li></ul></div>
		raw-html:<div class="todo">from U2: Students consider the innovations around us that collect data about us, the availability of information online, why privacy is good to protect, reasons for giving up privacy, and how to best protect their own online privacy; they also examine communications technology and ways that computing impacts community (including cyberbullying). Students then learn about encryption, including message encoding and decoding, ciphers, RSA encryption and encryption politics, and cryptography innovations. While we do emphasize how revolutionary public key cryptography has been, the main emphasis is on how the various social stakeholders view the question of strong encryption of user data.</div>
		

h3: Big Ideas 1, 2, 4, 5, 7
        raw-html:<p>Students are introduced to foundational concepts of <strong>programming (Big Idea 5)</strong> including loops, variables, and procedures, and apply these in small programming projects in which they are encouraged to explore creatively and embellish their programs to support the <strong>creative (Big Idea 1)</strong> development of interesting computational artifacts. As students learn to develop and evaluate <strong>algorithms (Big Idea 4)</strong> for implementation and execution on a computer, they see that complex programs can be simplified by using <strong>abstraction (Big Idea 2)</strong> to manage the complexity. Unit 1 includes a Social Implications lab, beginning a study of <strong>global impact (Big Idea 7)</strong> that is maintained throughout the course. The Unit 1 Social Implications topic is on privacy<s>, violent video games, and innovations</s>. </p>
        
h3: Computational Thinking Practices P3, P4, P5, P6 
        raw-html:<p>One way students develop their computational thinking skills is through programming and analyzing the programs of others. For example, students are asked to predict what they think will result from a given Snap<em>!</em> script. Making such predictions requires students to make sense of the sequential nature of the code. Students are introduced to one use of <strong>abstracting (P3)</strong> in packaging a collection of details in a form that more clearly expresses their meaning or purpose. They will expand their understanding of abstraction throughout the course. The emphasis on Pair Programming in Unit 1 establishes the regular practice of <strong>communicating (P5)</strong> and <strong>collaborating (P6)</strong> to solve problems. Students <strong>analyze problems (P4)</strong> about the broader world of computing by exploring its impacts. Students cultivate analytic thinking skills as they debate and sometimes write about important and complex social issues.</p>
		raw-html:<div class="todo">from U2: In the Social Implications Labs, students <strong>connect computing (P1)</strong> to issues they can identify with, both the impacts of computing and the connections between people and computing.

</div>
		
	
h3: Student Labs
	raw-html:<div class="comment">Is this Sound files sidenote still relevant? --MF, 3/7/17</div><div class="sidenoteBig"><strong>Note: Sound files</strong> can be imported into Snap<em>!</em> projects, but which media types work depends on the local computer's browser and security settings. Regarding file size, there is no limit, but it's not a great idea to upload massive media in limited bandwidth situations. Especially when several people upload a lot of media at around the same time, bandwidth will go down and transfers can slow or timeout. Classrooms with limited bandwidth connections may opt to avoid sound importing altogether. <strong>Massive media projects are fun, but only with adequate hardware and network resources.</strong></div>
	resource: Lab 1: Building an App [/bjc-r/cur/teaching-guide/U1/lab-pages/1-building-an-app.html]
	raw-html:<ul><li>3-5 days (100-195 minutes)</li></ul>
	resource: Lab 2: Sprite Conversation [/bjc-r/cur/teaching-guide/U1/lab-pages/2-sprite-conversation.html]
	raw-html:<ul><li>X-X days (X-X minutes) for required pages <strong>Edit</strong></li></ul>
	resource: Lab 3: Sprite Drawing [/bjc-r/cur/teaching-guide/U1/lab-pages/3-sprite-drawing.html]
	raw-html:<ul><li>2-4 days (90-155 minutes) for required pages <strong>Edit ???</strong></li></ul>
	resource: Lab 4: Privacy [/bjc-r/cur/teaching-guide/U1/lab-pages/4-privacy.html]
	raw-html:<ul><li>2-3 days (80-115 minutes) for required pages <strong>Edit ???</strong></li></ul>
	resource: Optional Projects [/bjc-r/cur/teaching-guide/U1/lab-pages/U1-optional-projects.html]
	
	//resource: Lab 3: Building Your Own Blocks [/bjc-r/cur/teaching-guide/U1/lab-pages/3-make-your-own-blocks.html]
	//raw-html:<ul><li>2-4 days (90-180 minutes)</li></ul>
	//resource: Lab 4: Building Grids for Games [/bjc-r/cur/teaching-guide/U1/lab-pages/4-grids-for-games.html]
	//raw-html:<ul><li>1-2 days (40-80 minutes)</li></ul>
	
	//resource: Lab 5: Explosion of Bits; Games and Violence [/bjc-r/cur/teaching-guide/U1/lab-pages/5-explosion-bits-games-violence.html] 
	//raw-html:<ul><li>1 week (160-205 minutes)</li></ul>

h3: Assessment: eCard Project
		raw-html: <p><div class="sidenote">If you need to know what an eCard is, click <a href="https://www.google.com/search?q=ecard" target="_blank">here</a>.</div>Have students create an eCard that meets <a href="https://docs.google.com/document/d/1-3vj9J8aFo60Y2AWAAcEulWetpaS2basQHmf2Kkr4S8/edit?usp=sharing" target="_blank">these specifications</a>. In preparation for the <a href="http://media.collegeboard.com/digitalServices/pdf/ap/ap-computer-science-principles-performance-assessment.pdf#page=3" target="_blank">AP Create Task</a>, students describe the purpose of their program in 100 words or less and, if necessary, how to use it.</p>	
		
}
