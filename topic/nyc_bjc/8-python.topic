title: Python
{
h1: Topic 15: Besides Blocks: Welcome to Python!

h2: Big Ideas
big-idea: Computational Thinking is the idea of how you solve a problem. This process can be applied to any language.
big-idea: Python and <span class="snap">snap</span> are awesome languages which coexist. 
big-idea: After learning one language, the few languages you learn will be much easier. What you're learning is "how to learn".
big-idea: Text based languages are just as power as visual languages and come with their own set of pros and cons.

h2: Activities
learning-goal: Start playing with Python by using the command line.
learning-goal: Learn the basics of Python syntax and write a few simple programs.
learning-goal: You should be comfortable with basic math and "string" operations.

heading: Introduction to Python
    resource: Background Survey [/bjc-r/cur/programming/python/intro-survey.html]
    resource: Welcome to Besides Blocks: An Introduction to Python [/bjc-r/cur/programming/python/introduction_to_besides_blocks.html]
    resource: Opening a Shell and Python [/bjc-r/cur/programming/python/open_shell_and_python.html]
    
heading: Math and Variables
	resource: Variables and Primitive Expressions [/bjc-r/cur/programming/python/python_syntax_and_operators.html]
	quiz: Self-Test: Math and Variables [/bjc-r/cur/programming/python/math-and-variables-self-test.html]

heading: Running Python Scripts
    resource: Running a script from the Command Line [/bjc-r/cur/programming/python/running_script_from_command_line.html]
    resource: Finding A Bar [/bjc-r/cur/programming/python/finding_a_bar.html]

heading: Defining Functions and Loops
	resource: Defining a Simple Python Function [/bjc-r/cur/programming/python/define_simple_function.html]
	resource: Printing and While Loops [/bjc-r/cur/programming/python/printing_while_loops.html]

heading: String Manipulation, Conditionals, and Recursion
	resource: Basic String Manipulation [/bjc-r/cur/programming/python/python_basic_string.html]
	resource: Conditionals and Recursion [/bjc-r/cur/programming/python/python_conditionals.html]


h1: Formerly Topic 16: Besides Blocks: Data Structures and Python

h2: Big Ideas
big-idea: Data Structures are a way to help programmers organize items in ways which are easier to manipulate and understand.
big-idea: Lists are a basic data structure which exist in just about every language.
big-idea: "Key-Value Pairs" are a very easy way to create simple relationships among different data.
big-idea: Python dictionaries utilize key-value pairs to make organizing certain kinds of data much more effecient.

h2: Activities
learning-goal: Get more practice writing functions in Python.
learning-goal: Manipulate simple data structures and their data.
learning-goal: Learn how to use key-value pairs and why they are useful.
learning-goal: Solve problems with Python lists and dictionaries.

heading: Introduction to Python Data Structures
    resource: Welcome to Besides Blocks [/bjc-r/cur/programming/python/intro_besides_blocks_data_structs.html]
    resource: Introduction to Python Lists [/bjc-r/cur/programming/python/lists_intro.html]

heading: Mutability and List Functions in Python
    resource: List Mutability [/bjc-r/cur/programming/python/list_mutability.html]
    resource: List Functions [/bjc-r/cur/programming/python/list_functions.html]
    resource: Iterators [/bjc-r/cur/programming/python/python_iterators.html]
    resource: Getting Ready to Program [/bjc-r/cur/programming/python/data_structs_getting_setup.html]
    resource: 2D Lists [/bjc-r/cur/programming/python/2D_lists.html]

heading: Higher Order Functions in Python
    resource: HOFs in Python [/bjc-r/cur/programming/python/python_hofs_comprehensions.html]
    resource: Trying to Combine in Python [/bjc-r/cur/programming/python/trying_combine.html]

heading: Python Dictionaries
    resource: Comparing Dictionaries and Lists [/bjc-r/cur/programming/python/comparing_dicts_lists.html]
    resource: Using Python Dictionaries [/bjc-r/cur/programming/python/using_dictionaries.html]
    resource: 2D Dictionaries [/bjc-r/cur/programming/python/2D_dictionaries.html]


h1: Formerly Topic 17: Besides Blocks: Welcome to Data in Python!

h2: Big Ideas
big-idea: Computational Thinking is the idea of how you solve a problem. This process can be applied to any language.
big-idea: Python is a language for scientific computing. 
big-idea: After learning one language, the few languages you learn will be much easier. What you're learning is "how to learn".
big-idea: Python is well suited for text analysis because of its powerful nltk (Natural Language processing) toolkit.

h2: Activities
learning-goal: Investigate an idea in literary corpora.
learning-goal: Learn the basics of Python text analysis and data manipulation.
learning-goal: You should be comfortable with elementary techniques of natural language processing.

heading: Introduction to Data in Python
    resource: Welcome to computational lyrical analysis using python [/bjc-r/cur/programming/python/python_data_intro.html]

heading: Introduction to NLTK package
    resource: Getting familiar with the Natural Language Toolkit [/bjc-r/cur/programming/python/python_data_2.html]

heading: Creating a Jay Z Corpus
    resource: Corpus Reader [/bjc-r/cur/programming/python/python_data_3.html]
  
heading: Frequency Analysis
    resource: Determine the number of unique words used within an artist's first 35,000 lyrics [/bjc-r/cur/programming/python/python_data_4.html] 

heading: Data crunching versus gaining insight? When Data Science runs amok
    resource: Lets investigate basketball concepts in the corpora [/bjc-r/cur/programming/python/python_data_5.html]


heading: Conclusion
	resource: Concluding Survey [/bjc-r/cur/programming/python/outro-survey.html]

}
