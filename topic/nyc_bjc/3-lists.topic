1-title: Lists
{
// h1: Formerly Topic 5: Collecting Data into Lists

// h2: Big Ideas
// big-idea: Understand the meaning of Turing Completeness.
// big-idea: Understand the concept of recursion.
// big-idea: Explore privacy issues related to the widespread unchecked dissemination of digital information.

//	video: Programming Paradigms (Dan Garcia) [https://coursesharing.org/courses/6/lectures/13]
//	video: Recursion 1 [https://coursesharing.org/courses/6/lectures/17]
//	video: Social Implications 1 [http://youtu.be/v_tOSw-vhug]
//	reading: Blown to Bits, Chapter 3 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter3.pdf]

// h2: Activities
// learning-goal: Practice writing and reading functions with different input types.
// learning-goal: Determine how to break problems down into individual functions.
// learning-goal: Gain experience working with a new data structure and the large repository of blocks that work on this data structure.
// learning-goal: Develop the techniques and functions to draw a game board.

heading: Introduction to Lists
	 resource: Getting Started [/bjc-r/cur/programming/3-lists/1-working-with-lists/1-getting-started.html]
	 resource: Using the LIST block to make a list [/bjc-r/cur/programming/3-lists/1-working-with-lists/2-using-the-LIST-block-to-make-a-list.html]
	 resource: Why use lists?  [/bjc-r/cur/programming/3-lists/1-working-with-lists/3-why-use-lists.html]
	 resource: Transforming each item of a list [/bjc-r/cur/programming/3-lists/1-working-with-lists/4-transforming-each-item-of-a-list.html]
	 resource: Choosing some items from a list [/bjc-r/cur/programming/3-lists/1-working-with-lists/5-choosing-some-items-from-a-list.html]
	 resource: Combining all the items of a list [/bjc-r/cur/programming/3-lists/1-working-with-lists/6-combining-all-the-items-of-a-list.html]
	 resource: Composing higher order functions to solve more complicated problems [/bjc-r/cur/programming/3-lists/1-working-with-lists/7-composing-higher-order-functions-to-solve-more-complicated-problems.html]
	 resource: More on composition of higher order functions [/bjc-r/cur/programming/3-lists/1-working-with-lists/8-more-on-composition-of-higher-order-functions.html]
	 resource: When you really have to loop [/bjc-r/cur/programming/3-lists/1-working-with-lists/9-when-you-really-have-to-loop.html]
	
//heading: Lists and Sentences: The Index Variable Pattern
//	resource: Processing a Sentence [/bjc-r/cur/programming/lists/sentences/processing-a-sentence.html]

heading: Magic Squares
	 resource: Getting Started [/bjc-r/cur/programming/3-lists/2-magic-square/getting-started.html]
	 resource: Introducing Triples [/bjc-r/cur/programming/3-lists/2-magic-square/finding-triples.html]
	 resource: Triples [/bjc-r/cur/programming/3-lists/2-magic-square/finding-triples-2.html]
	 resource: Finding All The Triples [/bjc-r/cur/programming/3-lists/2-magic-square/finding-triples-3.html]
	 resource: Finishing Touches [/bjc-r/cur/programming/3-lists/2-magic-square/finishing-touches.html]	
	
heading: List Mutation
	resource: Swap Two List Values [/bjc-r/cur/programming/lists/intro/swap-two-list-values.html]
	resource: Mutation of Variables [/bjc-r/cur/programming/lists/mutation/mutate-vars.html]

	
assignment: (Due Later) Hangman Classic [/bjc-r/cur/programming/projects/hangman/hangman-classic.html]

// h1: Formerly Topic 13: Practicing with Lists: Tic-Tac-Toe
// h2: Big Ideas


// 	video: Recursion 2 [https://coursesharing.org/courses/6/lectures/19]
// 	video: Social Implications 2 [https://coursesharing.org/courses/6/lectures/20]
// 	reading: Blown to Bits, Chapter 4 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter4.pdf]

// h2: Activities
// learning-goal: Get more practice with lists and higher order functions used in combination.
// learning-goal: Develop a significant-sized project.

heading: Tic-Tac-Toe strategy
	 resource: Tic-Tac-Toe: Introduction [/bjc-r/cur/programming/lists/hof/ttt/01-intro.html]
	 resource: Program Structure and Strategy [/bjc-r/cur/programming/lists/hof/ttt/02-strategy.html]
	 resource: Finding Triples [/bjc-r/cur/programming/lists/hof/ttt/03-triples.html]
	 resource: Finding Triples (Continued) [/bjc-r/cur/programming/lists/hof/ttt/04-triples2.html]
	 resource: Find a Winning Square [/bjc-r/cur/programming/lists/hof/ttt/05-winning-square.html]
	 resource: Blocking the Opponent [/bjc-r/cur/programming/lists/hof/ttt/06-block-opponent.html]
	 resource: Best Free Square  [/bjc-r/cur/programming/lists/hof/ttt/07-best-free.html]
	 //resource: Make the Game Interactive [/bjc-r/cur/programming/lists/hof/ttt/08-interactive.html] // this has been given in new starter file
	 resource: Improving the Strategy  [/bjc-r/cur/programming/lists/hof/ttt/09-improving.html]

}
