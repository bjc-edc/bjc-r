<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="if %&apos;test&apos; then %&apos;true&apos; else %&apos;false&apos;" type="reporter" category="control"><header></header><code></code><inputs><input type="%b"></input><input type="%anyUE"></input><input type="%anyUE"></input></inputs><script><block s="doIfElse"><block var="test"/><script><block s="doReport"><block s="evaluate"><block var="true"/><list></list></block></block></script><script><block s="doReport"><block s="evaluate"><block var="false"/><list></list></block></block></script></block></script></block-definition><block-definition s="scale %&apos;value&apos; %&apos;bounds&apos; %&apos;screenmax&apos;" type="reporter" category="operators"><comment w="174" collapsed="true">Turn raw value into screen coordinate</comment><header></header><code></code><inputs><input type="%n"></input><input type="%l"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="reportDifference"><block s="reportProduct"><block s="reportDifference"><block var="value"/><block s="reportListItem"><l>2</l><block var="bounds"/></block></block><block s="reportQuotient"><block s="reportProduct"><l>2</l><block var="screenmax"/></block><block s="reportDifference"><block s="reportListItem"><l>3</l><block var="bounds"/></block><block s="reportListItem"><l>2</l><block var="bounds"/></block></block></block></block><block var="screenmax"/></block></block></script></block-definition><block-definition s="label %&apos;text&apos; of size %&apos;size&apos;" type="command" category="pen"><comment x="0" y="0" w="90" collapsed="false">LABEL will stamp text on the stage at the given font size. The direction of the text is the direction the sprite is facing, and color will match the pen color.</comment><header></header><code></code><inputs><input type="%txt">Hello!</input><input type="%n">12</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l><l>size</l></list><l>var stage = this.parentThatIsA(StageMorph),&#xD;    context = stage.penTrails().getContext(&apos;2d&apos;),&#xD;    rotation = radians(this.direction() - 90),&#xD;    trans = new Point(&#xD;      this.center().x - stage.left(),&#xD;      this.center().y - stage.top()&#xD;    ),&#xD;    isWarped = this.Warped,&#xD;    len,&#xD;    pos;&#xD;&#xD;if (isWarped) {endWarp(); }&#xD;context.save();&#xD;context.font = size + &apos;px monospace&apos;;&#xD;context.textAlign = &apos;left&apos;;&#xD;context.textBaseline = &apos;alphabetic&apos;;&#xD;context.fillStyle = this.color.toString();&#xD;len = context.measureText(text).width;&#xD;trans = trans.multiplyBy(1 / stage.scale);&#xD;context.translate(trans.x, trans.y);&#xD;context.rotate(rotation);&#xD;context.fillText(text, 0, 0);&#xD;context.translate(-trans.x, -trans.y);&#xD;context.restore();&#xD;pos = new Point(&#xD;  len * Math.sin(radians(this.direction())),&#xD;  len * Math.cos(radians(this.direction())));&#xD;pos = pos.add(new Point(this.xPosition(), this.yPosition()));&#xD;this.gotoXY(pos.x, pos.y, false);&#xD;this.changed();&#xD;if (isWarped) {this.startWarp(); }&#xD;stage.changed();</l></block><list><block var="text"/><block var="size"/></list></block></script></block-definition><block-definition s="bounds %&apos;data&apos;" type="reporter" category="lists"><comment w="228" collapsed="false">Takes a list of numbers, and reports a three-item list of the center, smallest, and highest values.</comment><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list><custom-block s="combine with %repRing items of %l"><block s="reifyReporter"><autolambda><custom-block s="if %b then %anyUE else %anyUE"><block s="reportLessThan"><block var="a"/><block var="b"/></block><block var="a"/><block var="b"/></custom-block></autolambda><list><l>a</l><l>b</l></list></block><block var="data"/></custom-block><custom-block s="combine with %repRing items of %l"><block s="reifyReporter"><autolambda><custom-block s="if %b then %anyUE else %anyUE"><block s="reportGreaterThan"><block var="a"/><block var="b"/></block><block var="a"/><block var="b"/></custom-block></autolambda><list><l>a</l><l>b</l></list></block><block var="data"/></custom-block></list></block></block><block s="doReport"><block s="reportCONS"><block s="reportQuotient"><block s="reportSum"><block s="reportListItem"><l>1</l><block var="result"/></block><block s="reportListItem"><l>2</l><block var="result"/></block></block><l>2</l></block><block var="result"/></block></block></script></block-definition><block-definition s="map %&apos;function&apos; over %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%repRing"></input><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>mapone</l><l>mapmany</l></list></block><block s="doSetVar"><l>mapone</l><block s="reifyScript"><script><block s="doIf"><custom-block s="empty? %l"><block var="data"/></custom-block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doReport"><block s="reportCONS"><block s="evaluate"><block var="function"/><list><block s="reportListItem"><l>1</l><block var="data"/></block></list></block><block s="evaluate"><block var="mapone"/><list><block s="reportCDR"><block var="data"/></block></list></block></block></block></script><list><l>data</l></list></block></block><block s="doSetVar"><l>mapmany</l><block s="reifyScript"><script><block s="doIf"><custom-block s="empty? %l"><block s="reportListItem"><l>1</l><block var="data lists"/></block></custom-block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doReport"><block s="reportCONS"><block s="evaluate"><block var="function"/><custom-block s="map %repRing over %mult%l"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><l/></block></autolambda><list></list></block><list><block var="data lists"/></list></custom-block></block><block s="evaluate"><block var="mapmany"/><list><custom-block s="map %repRing over %mult%l"><block s="reifyReporter"><autolambda><block s="reportCDR"><l/></block></autolambda><list></list></block><list><block var="data lists"/></list></custom-block></list></block></block></block></script><list><l>data lists</l></list></block></block><block s="doIfElse"><custom-block s="empty? %l"><block s="reportCDR"><block var="lists"/></block></custom-block><script><block s="doReport"><block s="evaluate"><block var="mapone"/><list><block s="reportListItem"><l>1</l><block var="lists"/></block></list></block></block></script><script><block s="doReport"><block s="evaluate"><block var="mapmany"/><list><block var="lists"/></list></block></block></script></block></script></block></script></block-definition><block-definition s="empty? %&apos;data&apos;" type="predicate" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportEquals"><block var="data"/><block s="reportNewList"><list></list></block></block></block></script></block-definition><block-definition s="combine with %&apos;function&apos; items of %&apos;data&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%repRing"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doIf"><custom-block s="empty? %l"><block s="reportCDR"><block var="data"/></block></custom-block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="data"/></block></block></script></block><block s="doReport"><block s="evaluate"><block var="function"/><list><block s="reportListItem"><l>1</l><block var="data"/></block><custom-block s="combine with %repRing items of %l"><block var="function"/><block s="reportCDR"><block var="data"/></block></custom-block></list></block></block></script></block></script></block-definition><block-definition s="for each %&apos;item&apos; of %&apos;data&apos; %&apos;action&apos;" type="command" category="lists"><header></header><code></code><inputs><input type="%upvar"></input><input type="%l"></input><input type="%cs"></input></inputs><script><block s="doUntil"><custom-block s="empty? %l"><block var="data"/></custom-block><script><block s="doSetVar"><l>item</l><block s="reportListItem"><l>1</l><block var="data"/></block></block><block s="doRun"><block var="action"/><list><block s="reportListItem"><l>1</l><block var="data"/></block></list></block><block s="doSetVar"><l>data</l><block s="reportCDR"><block var="data"/></block></block></script></block></script></block-definition><block-definition s="plot %&apos;data&apos;" type="command" category="lists"><comment w="210" collapsed="false">Takes a list of (x,y) pairs and plots them.  Automatically scales to fit the stage,</comment><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>xbounds</l><l>ybounds</l></list></block><block s="doSetVar"><l>xbounds</l><custom-block s="bounds %l"><custom-block s="map %repRing over %mult%l"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><l/></block></autolambda><list></list></block><list><block var="data"/></list></custom-block></custom-block></block><block s="doSetVar"><l>ybounds</l><custom-block s="bounds %l"><custom-block s="map %repRing over %mult%l"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><list><block var="data"/></list></custom-block></custom-block></block><block s="setSize"><l>3</l></block><block s="up"></block><block s="gotoXY"><l>0</l><l>0</l></block><block s="down"></block><block s="setColor"><color>255,47,23,1</color></block><block s="forward"><l>1</l></block><block s="up"></block><custom-block s="label %txt of size %n"><block s="reportJoinWords"><list><l>(</l><block s="reportListItem"><l>1</l><block var="xbounds"/></block><l>,</l><block s="reportListItem"><l>1</l><block var="ybounds"/></block><l>)</l></list></block><l>12</l></custom-block><block s="setColor"><color>0,13,10,1</color></block><custom-block s="for each %upvar of %l %cs"><l>item</l><block var="data"/><script><block s="up"></block><block s="gotoXY"><custom-block s="scale %n %l %n"><block s="reportListItem"><l>1</l><l/></block><block var="xbounds"/><l>230</l></custom-block><custom-block s="scale %n %l %n"><block s="reportListItem"><l>2</l><l/></block><block var="ybounds"/><l>170</l></custom-block></block><block s="down"></block><block s="forward"><l>1</l></block></script></custom-block></script></block-definition></blocks>